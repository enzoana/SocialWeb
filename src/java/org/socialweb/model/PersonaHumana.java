package org.socialweb.model;

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * PersonaHumana generated by hbm2java
 */
@Entity
@Table(name="persona_humana"
    ,schema="public"
)
public class PersonaHumana implements java.io.Serializable {

    private int personaForeign;
    private Persona persona;
    private TipoDocumento tipoDocumento;
    private String documento;
    private String nombre;
    private String apellido;
    private String usrCreate;
    private Date timeCreate;
    private String usrLastUpdate;
    private Date timeLastUpdate;

    public PersonaHumana() {}

    public PersonaHumana(Persona persona,
            TipoDocumento tipoDocumento,
            String documento,
            String nombre,
            String apellido,
            String usrCreate,
            Date timeCreate,
            String usrLastUpdate,
            Date timeLastUpdate) {

        this.persona = persona;
        this.tipoDocumento = tipoDocumento;
        this.documento = documento;
        this.nombre = nombre;
        this.apellido = apellido;
        this.usrCreate = usrCreate;
        this.timeCreate = timeCreate;
        this.usrLastUpdate = usrLastUpdate;
        this.timeLastUpdate = timeLastUpdate;
    }

    @GenericGenerator(name="generator",
            strategy="foreign",
            parameters=@Parameter(name="property",
                    value="persona"))
    @Id @GeneratedValue(generator="generator")
    @Column(name="persona", unique=true, nullable=false)
    public int getPersonaForeign() {
        return this.personaForeign;
    }

    public void setPersonaForeign(int personaForeign) {
        this.personaForeign = personaForeign;
    }

    @OneToOne(fetch=FetchType.LAZY)
    @PrimaryKeyJoinColumn
    public Persona getPersona() {
        return this.persona;
    }

    public void setPersona(Persona persona) {
        this.persona = persona;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="tipo_documento",
            nullable=false)
    public TipoDocumento getTipoDocumento() {
        return this.tipoDocumento;
    }

    public void setTipoDocumento(TipoDocumento tipoDocumento) {
        this.tipoDocumento = tipoDocumento;
    }

    @Column(name="documento",
            nullable=false)
    public String getDocumento() {
        return this.documento;
    }

    public void setDocumento(String documento) {
        this.documento = documento;
    }

    @Column(name="nombre",
            nullable=false)
    public String getNombre() {
        return this.nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    @Column(name="apellido",
            nullable=false)
    public String getApellido() {
        return this.apellido;
    }

    public void setApellido(String apellido) {
        this.apellido = apellido;
    }

    @Column(name="usr_create",
            nullable=false)
    public String getUsrCreate() {
        return this.usrCreate;
    }

    public void setUsrCreate(String usrCreate) {
        this.usrCreate = usrCreate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="time_create",
            nullable=false,
            length=29)
    public Date getTimeCreate() {
        return this.timeCreate;
    }

    public void setTimeCreate(Date timeCreate) {
        this.timeCreate = timeCreate;
    }

    @Column(name="usr_last_update",
            nullable=false)
    public String getUsrLastUpdate() {
        return this.usrLastUpdate;
    }

    public void setUsrLastUpdate(String usrLastUpdate) {
        this.usrLastUpdate = usrLastUpdate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="time_last_update",
            nullable=false,
            length=29)
    public Date getTimeLastUpdate() {
        return this.timeLastUpdate;
    }

    public void setTimeLastUpdate(Date timeLastUpdate) {
        this.timeLastUpdate = timeLastUpdate;
    }
}