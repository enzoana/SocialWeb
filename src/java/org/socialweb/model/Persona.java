package org.socialweb.model;

import java.io.Serializable;
import java.util.Date;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Persona generated by hbm2java
 */
@Entity
@Table(name="persona"
    ,schema="public"
    , uniqueConstraints = @UniqueConstraint(columnNames="cuit_cuil_cdi") 
)
public class Persona implements java.io.Serializable {

    private int codigo;
    private Domicilio domicilioByDomicilioReal;
    private Domicilio domicilioByDomicilioFiscal;
    private Domicilio domicilioByDomicilioLegal;
    private EstadoPersona estadoPersona;
    private Serializable cuitCuilCdi;
    private String usrCreate;
    private Date timeCreate;
    private String usrLastUpdate;
    private Date timeLastUpdate;
    private PersonaJuridica personaJuridica;
        private PersonaHumana personaHumana;
        private List<Contacto> contactos = new ArrayList<Contacto>(0);

    public Persona() {}

    public Persona(int codigo,
            Domicilio domicilioByDomicilioReal,
            EstadoPersona estadoPersona,
            Serializable cuitCuilCdi,
            String usrCreate,
            Date timeCreate,
            String usrLastUpdate,
            Date timeLastUpdate) {

        this.codigo = codigo;
        this.domicilioByDomicilioReal = domicilioByDomicilioReal;
        this.estadoPersona = estadoPersona;
        this.cuitCuilCdi = cuitCuilCdi;
        this.usrCreate = usrCreate;
        this.timeCreate = timeCreate;
        this.usrLastUpdate = usrLastUpdate;
        this.timeLastUpdate = timeLastUpdate;
    }

    public Persona(int codigo,
            Domicilio domicilioByDomicilioReal,
            Domicilio domicilioByDomicilioFiscal,
            Domicilio domicilioByDomicilioLegal,
            EstadoPersona estadoPersona,
            Serializable cuitCuilCdi,
            String usrCreate,
            Date timeCreate,
            String usrLastUpdate,
            Date timeLastUpdate,
            PersonaJuridica personaJuridica,
            PersonaHumana personaHumana,
            List<Contacto> contactos) {

        this.codigo = codigo;
        this.domicilioByDomicilioReal = domicilioByDomicilioReal;
        this.domicilioByDomicilioFiscal = domicilioByDomicilioFiscal;
        this.domicilioByDomicilioLegal = domicilioByDomicilioLegal;
        this.estadoPersona = estadoPersona;
        this.cuitCuilCdi = cuitCuilCdi;
        this.usrCreate = usrCreate;
        this.timeCreate = timeCreate;
        this.usrLastUpdate = usrLastUpdate;
        this.timeLastUpdate = timeLastUpdate;
        this.personaJuridica = personaJuridica;
        this.personaHumana = personaHumana;
        this.contactos = contactos;
    }

    @Id
    @Column(name="codigo", unique=true, nullable=false)
    public int getCodigo() {
        return this.codigo;
    }

    public void setCodigo(int codigo) {
        this.codigo = codigo;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="domicilio_real",
            nullable=false)
    public Domicilio getDomicilioByDomicilioReal() {
        return this.domicilioByDomicilioReal;
    }

    public void setDomicilioByDomicilioReal(Domicilio domicilioByDomicilioReal) {
        this.domicilioByDomicilioReal = domicilioByDomicilioReal;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="domicilio_fiscal")
    public Domicilio getDomicilioByDomicilioFiscal() {
        return this.domicilioByDomicilioFiscal;
    }

    public void setDomicilioByDomicilioFiscal(Domicilio domicilioByDomicilioFiscal) {
        this.domicilioByDomicilioFiscal = domicilioByDomicilioFiscal;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="domicilio_legal")
    public Domicilio getDomicilioByDomicilioLegal() {
        return this.domicilioByDomicilioLegal;
    }

    public void setDomicilioByDomicilioLegal(Domicilio domicilioByDomicilioLegal) {
        this.domicilioByDomicilioLegal = domicilioByDomicilioLegal;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="estado",
            nullable=false)
    public EstadoPersona getEstadoPersona() {
        return this.estadoPersona;
    }

    public void setEstadoPersona(EstadoPersona estadoPersona) {
        this.estadoPersona = estadoPersona;
    }

    @Column(name="cuit_cuil_cdi",
            unique=true,
            nullable=false)
    public Serializable getCuitCuilCdi() {
        return this.cuitCuilCdi;
    }

    public void setCuitCuilCdi(Serializable cuitCuilCdi) {
        this.cuitCuilCdi = cuitCuilCdi;
    }

    @Column(name="usr_create",
            nullable=false)
    public String getUsrCreate() {
        return this.usrCreate;
    }

    public void setUsrCreate(String usrCreate) {
        this.usrCreate = usrCreate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="time_create",
            nullable=false,
            length=29)
    public Date getTimeCreate() {
        return this.timeCreate;
    }

    public void setTimeCreate(Date timeCreate) {
        this.timeCreate = timeCreate;
    }

    @Column(name="usr_last_update",
            nullable=false)
    public String getUsrLastUpdate() {
        return this.usrLastUpdate;
    }

    public void setUsrLastUpdate(String usrLastUpdate) {
        this.usrLastUpdate = usrLastUpdate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="time_last_update",
            nullable=false,
            length=29)
    public Date getTimeLastUpdate() {
        return this.timeLastUpdate;
    }

    public void setTimeLastUpdate(Date timeLastUpdate) {
        this.timeLastUpdate = timeLastUpdate;
    }

    @OneToOne(fetch=FetchType.LAZY,
            mappedBy="personaJuridica")
    public PersonaJuridica getPersonaJuridica() {
        return this.personaJuridica;
    }

    public void setPersonaJuridica(PersonaJuridica personaJuridica) {
        this.personaJuridica = personaJuridica;
    }

    @OneToOne(fetch=FetchType.LAZY,
            mappedBy="personaHumana")
    public PersonaHumana getPersonaHumana() {
        return this.personaHumana;
    }

    public void setPersonaHumana(PersonaHumana personaHumana) {
        this.personaHumana = personaHumana;
    }

    @OneToMany(fetch=FetchType.LAZY,
            mappedBy="contactos")
    public List<Contacto> getContactos() {
        return this.contactos;
    }

    public void setContactos(List<Contacto> contactos) {
        this.contactos = contactos;
    }
}