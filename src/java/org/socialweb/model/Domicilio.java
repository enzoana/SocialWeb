package org.socialweb.model;

import java.util.Date;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Domicilio generated by hbm2java
 */
@Entity
@Table(name="domicilio"
    ,schema="public"
)
public class Domicilio implements java.io.Serializable {

    private int codigo;
    private Ciudad ciudad;
    private String calle;
    private String numero;
    private String departamento;
    private String usrCreate;
    private Date timeCreate;
    private String usrLastUpdate;
    private Date timeLastUpdate;
    private List<Persona> personasConDomicilioReal = new ArrayList<Persona>(0);
    private List<Persona> personasConDomicilioFiscal = new ArrayList<Persona>(0);
    private List<Persona> personasConDomicilioLegal = new ArrayList<Persona>(0);

    public Domicilio() {}
	
    public Domicilio(int codigo,
            Ciudad ciudad,
            String calle,
            String usrCreate,
            Date timeCreate,
            String usrLastUpdate,
            Date timeLastUpdate) {

        this.codigo = codigo;
        this.ciudad = ciudad;
        this.calle = calle;
        this.usrCreate = usrCreate;
        this.timeCreate = timeCreate;
        this.usrLastUpdate = usrLastUpdate;
        this.timeLastUpdate = timeLastUpdate;
    }

    public Domicilio(int codigo,
            Ciudad ciudad,
            String calle,
            String numero,
            String departamento,
            String usrCreate,
            Date timeCreate,
            String usrLastUpdate,
            Date timeLastUpdate,
            List<Persona> personasConDomicilioReal,
            List<Persona> personasConDomicilioFiscal,
            List<Persona> personasConDomicilioLegal) {

        this.codigo = codigo;
        this.ciudad = ciudad;
        this.calle = calle;
        this.numero = numero;
        this.departamento = departamento;
        this.usrCreate = usrCreate;
        this.timeCreate = timeCreate;
        this.usrLastUpdate = usrLastUpdate;
        this.timeLastUpdate = timeLastUpdate;
        this.personasConDomicilioReal = personasConDomicilioReal;
        this.personasConDomicilioFiscal = personasConDomicilioFiscal;
        this.personasConDomicilioLegal = personasConDomicilioLegal;
    }

    @Id 
    @Column(name="codigo",
            unique=true,
            nullable=false)
    public int getCodigo() {
        return this.codigo;
    }

    public void setCodigo(int codigo) {
        this.codigo = codigo;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ciudad",
            nullable=false)
    public Ciudad getCiudad() {
        return this.ciudad;
    }

    public void setCiudad(Ciudad ciudad) {
        this.ciudad = ciudad;
    }

    @Column(name="calle",
            nullable=false)
    public String getCalle() {
        return this.calle;
    }

    public void setCalle(String calle) {
        this.calle = calle;
    }

    @Column(name="numero")
    public String getNumero() {
        return this.numero;
    }

    public void setNumero(String numero) {
        this.numero = numero;
    }

    @Column(name="departamento")
    public String getDepartamento() {
        return this.departamento;
    }

    public void setDepartamento(String departamento) {
        this.departamento = departamento;
    }

    @Column(name="usr_create",
            nullable=false)
    public String getUsrCreate() {
        return this.usrCreate;
    }

    public void setUsrCreate(String usrCreate) {
        this.usrCreate = usrCreate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="time_create",
            nullable=false,
            length=29)
    public Date getTimeCreate() {
        return this.timeCreate;
    }

    public void setTimeCreate(Date timeCreate) {
        this.timeCreate = timeCreate;
    }

    @Column(name="usr_last_update",
            nullable=false)
    public String getUsrLastUpdate() {
        return this.usrLastUpdate;
    }

    public void setUsrLastUpdate(String usrLastUpdate) {
        this.usrLastUpdate = usrLastUpdate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="time_last_update",
            nullable=false,
            length=29)
    public Date getTimeLastUpdate() {
        return this.timeLastUpdate;
    }

    public void setTimeLastUpdate(Date timeLastUpdate) {
        this.timeLastUpdate = timeLastUpdate;
    }

    @OneToMany(fetch=FetchType.LAZY, mappedBy="personasConDomicilioReal")
    public List<Persona> getPersonasConDomicilioReal() {
        return this.personasConDomicilioReal;
    }

    public void setPersonasConDomicilioReal(List<Persona> personasConDomicilioReal) {
        this.personasConDomicilioReal = personasConDomicilioReal;
    }

    @OneToMany(fetch=FetchType.LAZY, mappedBy="personasConDomicilioFiscal")
    public List<Persona> getPersonasConDomicilioFiscal() {
        return this.personasConDomicilioFiscal;
    }

    public void setPersonasConDomicilioFiscal(List<Persona> personasConDomicilioFiscal) {
        this.personasConDomicilioFiscal = personasConDomicilioFiscal;
    }

    @OneToMany(fetch=FetchType.LAZY, mappedBy="personasConDomicilioLegal")
    public List<Persona> getPersonasConDomicilioLegal() {
        return this.personasConDomicilioLegal;
    }

    public void setPersonasConDomicilioLegal(List<Persona> personasConDomicilioLegal) {
        this.personasConDomicilioLegal = personasConDomicilioLegal;
    }
}